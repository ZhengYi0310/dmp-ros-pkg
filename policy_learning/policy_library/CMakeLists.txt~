cmake_minimum_required(VERSION 2.4.6)
project(policy_library)


# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)
#add_definitions(-DEIGEN_NO_DEBUG)
#add_definitions(-DNDEBUG)

#rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#rosbuild_genmsg()
find_package(catkin REQUIRED COMPONENTS
  rosbag
  roscpp
  usc_utilities
  dynamic_movement_primitive
  dynamic_movement_primitive_utilities
  policy_msgs
  tf
  cmake_modules
  message_generation
  std_msgs
)

find_package(Bullet REQUIRED)
find_package(Eigen3 REQUIRED)
find_package(Eigen REQUIRED)
include_directories(${Eigen_INCLUDE_DIRS})
include_directories(${Bullet_INCLUDE_DIRS})
include_directories(${Eigen3_INCLUDE_DIRS})

add_message_files(DIRECTORY msg FILES
  Item.msg
  LibraryIndex.msg
)

generate_messages(DEPENDENCIES
  policy_msgs
  std_msgs
)

include_directories(
  include
  ${catkin_INCLUDE_DIRS}
)

catkin_package(INCLUDE_DIRS include
               LIBRARIES ${PROJECT_NAME}
	       CATKIN_DEPENDS rosbag roscpp usc_utilities dynamic_movement_primitive dynamic_movement_primitive_utilities policy_msgs tf cmake_modules message_runtime std_msgs
               DEPENDS Eigen Eigen3 Bullet)


add_library(${PROJECT_NAME}
#	src/covariant_trajectory_policy.cpp
        src/dmp_policy.cpp
#	src/mixed_policy.cpp
	src/policy.cpp
#	src/policy_factory.cpp
#	src/single_parameter_policy.cpp
)
target_link_libraries(usc_utilities ${Bullet_LIBRARIES} ${catkin_LIBRARIES})

#rosbuild_add_gtest(policy_library_test
#	test/covariant_trajectory_policy_test.cpp
#	test/policy_library_test.cpp
#)

#target_link_libraries(policy_library_test policy_library)

#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})
